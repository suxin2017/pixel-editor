{"version":3,"sources":["packages/render/common/dsf.ts","packages/render/store/Component.ts","packages/render/common/componentLib.ts","packages/editor/componentList.ts","packages/editor/history.ts","packages/editor/EditorStore.tsx","packages/nes/Button/index.tsx","packages/nes/index.tsx","packages/nes/layout/Col/index.tsx","packages/nes/layout/Row/index.tsx","components/Button/store.tsx","components/Button/Setting.tsx","components/Button/index.tsx","components/Page/store.tsx","components/Page/Setting.tsx","components/Page/index.tsx","components/Image/store.tsx","components/Image/Setting.tsx","components/Image/index.tsx","packages/render/index.tsx","Site/components/EditorRender/hocs/useDragHook.tsx","Site/components/EditorRender/index.tsx","Site/components/EditorRender/hocs/ActiveHoc.tsx","Site/components/EditorRender/hocs/DraggableHoc.tsx","Site/components/Editor/index.tsx","Site/components/ComponentList/index.tsx","Site/components/Setting/index.tsx","Site/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dsf","component","cb","children","forEach","com","ComponentType","debug","message","otherParams","console","log","componentLibs","Map","getComponent","name","get","ComponentStore","options","id","type","ATOM","historyStack","makeObservable","this","child","parent","uuidv4","props","initProps","$id","getRootStore","observable","componentList","cleanAllEditorComponent","clear","addEditorComponent","editorComponent","has","value","store","set","getEditorComponent","HistoryRef","HistoryAssign","point","dispatching","EditorHistory","length","propsSnapshot","preSnapshot","isEqual","toJS","cloneDeep","equalCb","ref","assign","keys","key","dispatch","undo","redo","disposerMap","editorStore","newStore","push","disposer","deepObserve","throttle","change","path","root","trailing","addComponent","activeComponent","node","CONTAINER","Error","addComponentToRoot","targetCom","result","find","targetIndex","indexOf","splice","delete","warn","settingComponent","from","to","findComponentById","undefined","init","action","EditorContext","React","createContext","EditorContextProvider","Provider","useEditorContext","useContext","Button","htmlType","className","classNames","prefix","Col","span","style","flex","Row","gutter","Children","map","cloneElement","paddingLeft","paddingRight","paddingTop","paddingBottom","gutterStyle","marginLeft","Array","isArray","marginRight","marginTop","marginBottom","domProps","wrapper","justify","flexWrap","justifyContent","AddStore","ButtonSetting","onChange","e","target","background","observer","textAlign","onClick","componentConfig","icon","src","alt","ContainerStore","Container","padding","ImageStore","width","Render","Component","moveEle","beforeHoc","Page","Add","Image","afterHoc","restInitState","rootNode","hoc","Com","isActive","border","position","stopPropagation","right","fontSize","draggableHandle","editorContext","onDrag","preventDefault","onDragEnd","moveNode","currNode","currentTarget","parentNode","parentElement","dataset","moveComponent","onDragEnter","onDragOver","dataTransfer","dropEffect","getBoundingClientRect","top","height","pageY","insertBefore","nextElementSibling","appendChild","onDragStart","setActiveComponentById","useDrag","draggable","realCom","reduce","c","Editor","maxWidth","margin","deleteComponent","ComponentList","values","addComponentToNearParentComponent","Setting","ComponentSetting","getActiveSetting","Site","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c01cfcfa.chunk.js","sourcesContent":["import { ComponentStore } from \"../store/Component\";\n\nexport function dsf(component: ComponentStore, cb: (com: ComponentStore) => void) {\n  cb(component);\n  component.children?.forEach((com) => {\n    dsf(com, cb);\n  });\n}\n\nexport function find(\n  component: ComponentStore,\n  root: ComponentStore\n): ComponentStore | undefined;\nexport function find(id: string, root: ComponentStore): ComponentStore | undefined;\nexport function find(component: ComponentStore | string, root: ComponentStore) {\n  let id: string;\n  if (typeof component === \"string\") {\n    id = component;\n  } else {\n    id = component.id;\n  }\n  let result: ComponentStore | undefined;\n  dsf(root, (com) => {\n    if (com.id === id) {\n      result = com;\n    }\n  });\n  return result;\n}\n","import { cloneDeep } from \"lodash\";\nimport { makeObservable, observable } from \"mobx\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getComponent } from \"../common/componentLib\";\ntype AnyObj = { [key: string]: any };\nexport enum ComponentType {\n  CONTAINER = 'container',\n  ATOM = 'atom'\n}\nexport interface IComponentStoreConstructorParam<Props>  {\n  initProps: Props;\n  name: string;\n  children?: ComponentStore[];\n  id?: string;\n  type?: ComponentType;\n}\nexport class ComponentStore<Props = AnyObj> {\n  id: string;\n\n  @observable\n  props: { $id: string } & Props;\n\n  name: string;\n\n  type: ComponentType = ComponentType.ATOM;\n\n  @observable\n  parent?: ComponentStore;\n\n  @observable\n  children?: ComponentStore[];\n\n  historyStack?: ComponentStore[];\n\n  constructor(options:IComponentStoreConstructorParam<Props>) {\n    makeObservable(this);\n    this.name = options.name;\n    this.children = options.children;\n    if (this.children) {\n      this.children.forEach((child) => {\n        child.parent = this;\n      });\n    }\n    this.id = options.id ?? uuidv4();\n    this.props = { ...options.initProps, $id: this.id };\n    console.log(options)\n    if (options.type) {\n      this.type = options.type;\n    }\n  }\n\n  getRootStore(): ComponentStore {\n    return this.parent ? this.parent.getRootStore() : this;\n  }\n\n  getParent<T extends ComponentStore>() {\n    return this.parent as T;\n  }\n}\n\n/**\n * render data -> json data\n * @param com \n * @returns \n */\nexport const serializing = (com: ComponentStore) => {\n  return cloneDeep(com);\n}\n/**\n * json data -> render data\n * @param com \n * @returns \n */\nexport const deserializing = (com: ComponentStore) => {\n  let result;\n  let component = getComponent(com.name);\n  if (component) {\n    const { children,...props } = com;\n    result = new component.store({\n      initProps: com.props,\n      ...props\n    });\n    if (children) {\n      const obvChildren = children.map(child => {\n          return deserializing(child)\n      })\n      result.children = obvChildren;\n    }\n  }\n  return result;\n}","import React from \"react\";\nimport { ComponentStore, IComponentStoreConstructorParam } from \"../store/Component\";\nconst debug = (message: string, ...otherParams: any[]) => {\n  console.log(\n    `%c render:component-list %c${message}`,\n    \"color:blue\",\n    \"color:black\",\n    ...otherParams\n  );\n};\nexport type IComponent<Props = any, Store = ComponentStore<Props>> = React.FC<\n  {\n    props: Props;\n    store: Store;\n  } & Props\n>;\nexport interface IRenderComponent<Props = any,Store = any>{\n  store: new (args: IComponentStoreConstructorParam<Props>) => Store;\n  component: IComponent<Props, Store>;\n}\nexport const componentLibs = new Map<string, IRenderComponent>();\n\nexport const cleanComponentLibs = () => {\n    debug(\"clear all components %s\");\n  return componentLibs.clear();\n};\nexport const addComponent = (name: string, value: IRenderComponent) => {\n  if (!componentLibs.has(name)) {\n    debug(\"add component %s\", name);\n\n    return componentLibs.set(name, value);\n  }\n  return componentLibs;\n};\n\nexport const deleteComponent = (name: string) => {\n  debug(\"delete component %s\", name);\n  return componentLibs.delete(name);\n};\n\nexport const getComponent = (name: string) => {\n  debug(\"get component %s\", name);\n  return componentLibs.get(name);\n};\n","import React from \"react\";\nimport { addComponent, cleanComponentLibs, deleteComponent, IComponent, IRenderComponent } from \"../render/common/componentLib\";\nimport { ComponentStore } from \"../render/store/Component\";\n\nexport type ISettingComponent<\n  Props = any,\n  Store = ComponentStore<Props>\n> = IComponent<Props, Store>;\n\nexport interface IEditorComponent<Props = any, Store = ComponentStore<Props>> extends IRenderComponent<Props,Store>{\n  name: string;\n  icon: React.ReactNode;\n  initProps: Props;\n  settingComponent: IComponent<Props, Store>;\n}\n\nexport const componentList = new Map<string, IEditorComponent>();\nexport const cleanAllEditorComponent = () => {\n  componentList.clear();\n  cleanComponentLibs();\n}\nexport const addEditorComponent = (editorComponent: IEditorComponent) => {\n  if (!componentList.has(editorComponent.name)) {\n    addComponent(editorComponent.name, {\n      component: editorComponent.component,\n      store:editorComponent.store\n    });\n    return componentList.set(editorComponent.name, editorComponent);\n  }\n  return componentList;\n};\n\nexport const deleteEditorComponent = (name: string) => {\n  deleteComponent(name);\n  return componentList.delete(name);\n};\n\nexport const getEditorComponent = <T extends IEditorComponent>(\n  name: string\n) => {\n  return componentList.get(name) as T;\n};\n\nexport const getAllComponent = () => {\n  console.log(componentList.values())\n  return Array.from(componentList.values());\n}\n","import { ComponentStore } from \"../render/store/Component\";\nimport { cloneDeep, isEqual, keys } from \"lodash\";\nimport { toJS } from \"mobx\";\n\nexport const HistoryRef: ComponentStore[\"props\"][] = [];\nexport const HistoryAssign: ComponentStore[\"props\"][] = [];\nexport let point: number = -1;\nlet dispatching = false;\n\nclass HistoryUtil {\n  init() {\n    HistoryRef.length = 0;\n    HistoryAssign.length = 0;\n    point = -1;\n    dispatching = false;\n  }\n  push(propsSnapshot: ComponentStore[\"props\"]) {\n    if (!dispatching) {\n      const preSnapshot = HistoryAssign[point - 1];\n      if (isEqual(toJS(propsSnapshot), preSnapshot)) {\n        return;\n      }\n      point++;\n      HistoryRef.length = point + 1;\n      HistoryAssign.length = point + 1;\n\n      HistoryRef[point] = propsSnapshot;\n      HistoryAssign[point] = cloneDeep(propsSnapshot);\n      console.log(\"push hsitory =>\", HistoryAssign, point);\n    }\n  }\n  dispatch(point: number, equalCb: () => void) {\n    const ref = HistoryRef[point];\n    const assign = HistoryAssign[point];\n    console.log(\"dispatch\", point, toJS(ref), assign);\n    if (assign) {\n      if (isEqual(toJS(ref), assign)) {\n        equalCb();\n      } else {\n        (keys(assign) as Array<keyof typeof assign>).forEach((key) => {\n          console.log(`key ${key} => `, assign[key]);\n          ref[key] = assign[key];\n        });\n      }\n    }\n  }\n  undo() {\n    if (point - 1 === -1) {\n      return;\n    }\n    dispatching = true;\n    this.dispatch(--point, () => {\n      this.undo();\n    });\n    dispatching = false;\n  }\n  redo() {\n    dispatching = true;\n    if (point + 1 >= HistoryRef.length) {\n      return;\n    }\n    this.dispatch(++point, () => {\n      this.redo();\n    });\n    dispatching = false;\n  }\n}\n\nexport const EditorHistory = new HistoryUtil();\n","import { action, makeObservable, observable } from \"mobx\";\nimport { dsf, find } from \"../render/common/dsf\";\nimport { ComponentStore, ComponentType } from \"../render/store/Component\";\nimport React from \"react\";\nimport { getEditorComponent, IEditorComponent } from \"./componentList\";\nimport { deepObserve, IDisposer } from \"mobx-utils\";\nimport { EditorHistory } from \"./history\";\nimport { throttle } from \"lodash\";\n\nconst disposerMap = new Map<string, IDisposer>();\n\nexport class EditorStore {\n  @observable component?: ComponentStore;\n  @observable activeComponent?: ComponentStore;\n\n  constructor(component?: ComponentStore) {\n    makeObservable(this);\n    this.component = component;\n  }\n\n  @action\n  addComponent(\n    parent: ComponentStore | undefined,\n    component: IEditorComponent\n  ) {\n    const newStore = new component.store({\n      name: component.name,\n      initProps: component.initProps,\n    });\n\n    EditorHistory.push(newStore.props);\n    const disposer = deepObserve(\n      newStore.props,\n      throttle(\n        (change, path, root) => {\n          EditorHistory.push(root);\n        },\n        1000,\n        { trailing: false }\n      )\n    );\n    disposerMap.set(newStore.id, disposer);\n    if (!parent) {\n      this.component = newStore;\n    } else {\n      newStore.parent = parent;\n      if (!parent.children) {\n        parent.children = [];\n      }\n      parent.children?.push(newStore);\n    }\n    return newStore;\n  }\n\n  @action\n  addComponentToRoot(component: IEditorComponent) {\n    return this.addComponent(this.component, component);\n  }\n\n  @action\n  addComponentToNearParentComponent(component: IEditorComponent) {\n    if (!this.activeComponent) {\n      return this.addComponentToRoot(component);\n    } else {\n      let node: ComponentStore | undefined = this.activeComponent;\n      while (node && node.type !== ComponentType.CONTAINER) {\n        node = node.parent;\n      }\n      if (!node) {\n        throw new Error(\"The nearest parent container component was not found\");\n      }\n      return this.addComponent(node, component);\n    }\n  }\n\n  @action\n  deleteComponent(id?: string) {\n    if (this.component) {\n      let targetCom = this.activeComponent;\n      if (id) {\n        targetCom = find(id, this.component);\n      }\n      // TODO need delete the root node ?\n      const targetIndex = targetCom?.parent?.children?.indexOf(targetCom);\n\n      if (targetCom != null && targetIndex != null) {\n        targetCom.parent?.children?.splice(targetIndex, 1);\n        const disposer = disposerMap.get(targetCom.id);\n        if (disposer) {\n          disposer();\n        }\n        disposerMap.delete(targetCom.id);\n      } else {\n        console.warn(\"no component delete\");\n      }\n    }\n  }\n\n  getActiveComponent<T extends ComponentStore>() {\n    return this.activeComponent as T | undefined;\n  }\n\n  getActiveSetting() {\n    if (this.activeComponent) {\n      return getEditorComponent(this.activeComponent.name)?.settingComponent;\n    }\n  }\n\n  findComponentById(id: string) {\n    let result: ComponentStore | undefined;\n    if (this.component) {\n      dsf(this.component, (com) => {\n        if (id === com.id) {\n          result = com;\n        }\n      });\n    }\n    return result;\n  }\n\n  @action\n  moveComponent(id: string, from: number, to: number) {\n    const component = this.findComponentById(id);\n    if (component) {\n      component.parent?.children?.splice(to, 0, component);\n      component?.parent?.children?.splice(from, 1);\n    }\n  }\n\n  @action\n  setActiveComponentById(id: string) {\n    const component = this.findComponentById(id);\n    if (component) {\n      this.activeComponent = component;\n    }\n  }\n\n  restInitState() {\n    this.component = undefined;\n    EditorHistory.init();\n  }\n}\n\nexport const editorStore = new EditorStore();\nexport const EditorContext = React.createContext(editorStore);\nexport const EditorContextProvider = EditorContext.Provider;\nexport const useEditorContext = () => React.useContext(EditorContext);\n","import classNames from \"classnames\";\nimport React from \"react\";\n\ninterface IButtonProps\n  extends Omit<\n    React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >,\n    \"type\"\n  > {\n  type?: \"primary\" | \"success\" | \"warning\" | \"error\" | \"disabled\";\n  htmlType?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >[\"type\"];\n}\n\nexport const Button: React.FC<IButtonProps> = (props) => {\n  return (\n    <button\n      {...props}\n      type={props.htmlType}\n      className={classNames(\"nes-btn\", {\n        [`is-${props.type}`]: true,\n      })}\n    >\n      {props.children}\n    </button>\n  );\n};\n","export const prefix = (className: string) => \"nes-\" + className;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { prefix } from \"../..\";\nimport \"./index.sass\";\ninterface IColProps {\n  span?: number;\n  flex?: string | number;\n  style?: React.CSSProperties\n}\n\nexport const Col: React.FC<IColProps> = (props) => {\n  return (\n    <div\n      className={classNames(\n        prefix(\"col\"),\n        props.span && {\n          [prefix(`col-${props.span}`)]: true,\n        }\n      )}\n      style={{\n        ...props.style,\n        flex: props.flex,\n\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { prefix } from \"../..\";\nimport \"./index.sass\";\n\ninterface IRowProps\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  gutter?: number | [number, number];\n  wrapper?: boolean;\n  justify?: React.CSSProperties[\"justifyContent\"];\n}\n\nexport const Row: React.FC<IRowProps> = (props) => {\n  let children = props.children;\n  if (props.gutter) {\n    children = React.Children.map(props.children, (child: any) => {\n      return React.cloneElement(child, {\n        ...child.props,\n        style: {\n          ...child.props?.style,\n          paddingLeft:\n            typeof props.gutter === \"number\" ? props.gutter : props.gutter?.[0],\n          paddingRight:\n            typeof props.gutter === \"number\" ? props.gutter : props.gutter?.[0],\n          paddingTop:\n            typeof props.gutter === \"number\" ? undefined : props.gutter?.[1],\n          paddingBottom:\n            typeof props.gutter === \"number\" ? undefined : props.gutter?.[1],\n        },\n      });\n    });\n  }\n\n  const gutterStyle = props.gutter\n    ? {\n        marginLeft: Array.isArray(props.gutter)\n          ? -props.gutter[0]\n          : -props.gutter,\n        marginRight: Array.isArray(props.gutter)\n          ? -props.gutter[0]\n          : -props.gutter,\n        marginTop: Array.isArray(props.gutter) ? -props.gutter[1] : undefined,\n        marginBottom: Array.isArray(props.gutter)\n          ? -props.gutter[1]\n          : undefined,\n      }\n    : undefined;\n  const { gutter, wrapper, justify, ...domProps } = props;\n  return (\n    <div\n      {...domProps}\n      className={classNames(prefix(\"row\"))}\n      style={{\n        ...gutterStyle,\n        ...domProps.style,\n        flexWrap: props.wrapper ? \"wrap\" : \"nowrap\",\n        justifyContent: props.justify,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import { action, makeObservable } from \"mobx\";\nimport { ComponentStore } from \"../../packages/render/store/Component\";\n\nexport interface IAddStoreProps {\n  value: string;\n  style?: React.CSSProperties\n}\n\nexport class AddStore extends ComponentStore<IAddStoreProps> {\n  constructor(initProps: { initProps: IAddStoreProps; name: string }) {\n    super(initProps);\n    makeObservable(this);\n  }\n\n  @action\n  setValue(value: string) {\n    this.props.value = value;\n  }\n}\n","import { observer } from \"mobx-react-lite\";\nimport { AddStore, IAddStoreProps } from \"./store\";\nimport { ISettingComponent } from \"../../packages/editor/componentList\";\nimport { Row } from \"../../packages/nes/layout/Row\";\nimport { Col } from \"../../packages/nes/layout/Col\";\n\nlet ButtonSetting: ISettingComponent<IAddStoreProps, AddStore> = ({\n  props,\n  store,\n}) => {\n  return (\n    <Row gutter={[0, 8]} wrapper>\n      <Col span={12}>\n        <span>内容：</span>\n        <input\n          value={props.value}\n          onChange={(e) => {\n            props.value = e.target.value;\n          }}\n        ></input>\n      </Col>\n      <Col span={12}>\n        <span>背景颜色 :</span>\n        <input\n          type=\"color\"\n          value={props.style?.background}\n          onChange={(e) => {\n            console.log(props.style);\n            if (props.style) {\n              props.style.background = e.target.value;\n            }\n          }}\n        ></input>\n      </Col>\n    </Row>\n  );\n};\n\nButtonSetting = observer(ButtonSetting);\n\nexport default ButtonSetting;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button as NesButton } from \"../../packages/nes/Button\";\nimport { AddStore, IAddStoreProps } from \"./store\";\nimport ButtonSetting from \"./Setting\";\nimport { IEditorComponent } from \"../../packages/editor/componentList\";\nimport { IComponent } from \"../../packages/render/common/componentLib\";\n\nlet Button: IComponent<IAddStoreProps, AddStore> = ({\n  props,\n  children,\n  store,\n}) => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <NesButton\n        style={{ ...props.style }}\n        onClick={() => {\n          console.log(\"download app\");\n        }}\n      >\n        {props.value}\n      </NesButton>\n    </div>\n  );\n};\nButton = observer(Button);\n\nconst componentConfig: IEditorComponent<IAddStoreProps, AddStore> = {\n  name: \"button\",\n  icon: (\n    <img src=\"https://img.icons8.com/ios/50/000000/button2.png\" alt=\"ignore\" />\n  ),\n  store: AddStore,\n  component: Button,\n  initProps: {\n    value: \"立即下载\",\n    style: {\n      background: \"#fff\",\n    },\n  },\n  settingComponent: ButtonSetting,\n};\n\nexport default componentConfig;\n","import { makeObservable } from \"mobx\";\nimport {\n  ComponentStore,\n  ComponentType,\n} from \"../../packages/render/store/Component\";\n\nexport class ContainerStore extends ComponentStore<{ value: string }> {\n  constructor(initProps: { initProps: { value: string }; name: string }) {\n    super({\n      ...initProps,\n      type:ComponentType.CONTAINER\n    });\n    makeObservable(this);\n  }\n}\n","import React from \"react\";\nimport { ContainerStore } from \"./store\";\n\nconst ButtonSetting: React.FC<{ props: ContainerStore[\"props\"] }> = ({ props }) => {\n  console.log(props);\n  return <div>\n    please select a component\n  </div>;\n};\n\n\nexport default ButtonSetting;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { ContainerStore } from \"./store\";\nimport ButtonSetting from \"./Setting\";\nimport { IEditorComponent } from \"../../packages/editor/componentList\";\n\nlet Container: React.FC<{\n  props: { value: number };\n  store: ContainerStore;\n}> = ({ props, children, store }) => {\n  return <div style={{ padding: 24 }}>{children}</div>;\n};\nContainer = observer(Container);\n\nconst componentConfig: IEditorComponent = {\n  name: \"container\",\n  icon: (\n    <img src=\"https://img.icons8.com/ios/50/000000/box--v1.png\" alt=\"icon\" />\n  ),\n  store: ContainerStore,\n  component: Container,\n  initProps: { value: \"\" },\n  settingComponent: ButtonSetting,\n};\n\nexport default componentConfig;\n","import { makeObservable } from \"mobx\";\nimport { ComponentStore } from \"../../packages/render/store/Component\";\n\nexport interface IImageStoreProps {\n  src: string | undefined;\n}\n\nexport class ImageStore extends ComponentStore<IImageStoreProps> {\n  constructor(initProps: { initProps: IImageStoreProps; name: string }) {\n    super(initProps);\n    makeObservable(this);\n  }\n}\n","import { observer } from \"mobx-react-lite\";\nimport { ImageStore, IImageStoreProps } from \"./store\";\nimport { ISettingComponent } from \"../../packages/editor/componentList\";\n\nlet ButtonSetting: ISettingComponent<IImageStoreProps, ImageStore> = ({\n  props,\n  store,\n}) => {\n  return (\n    <div>\n      <span>图片链接 :</span>\n      <input\n        value={props.src}\n        onChange={(e) => {\n          props.src = e.target.value;\n        }}\n      ></input>\n    </div>\n  );\n};\n\nButtonSetting = observer(ButtonSetting);\n\nexport default ButtonSetting;\n","import { observer } from \"mobx-react-lite\";\nimport { ImageStore, IImageStoreProps } from \"./store\";\nimport ButtonSetting from \"./Setting\";\nimport { IEditorComponent } from \"../../packages/editor/componentList\";\nimport { IComponent } from \"../../packages/render/common/componentLib\";\n\nlet Button: IComponent<IImageStoreProps, ImageStore> = ({\n  props,\n  children,\n  store,\n}) => {\n  return (\n    <div onClick={(e) => {}}>\n      <img width=\"100%\" src={props.src} alt=\"img\" />\n    </div>\n  );\n};\nButton = observer(Button);\n\nconst componentConfig: IEditorComponent<IImageStoreProps, ImageStore> = {\n  name: \"image\",\n  icon: (\n    <img src=\"https://img.icons8.com/dotty/80/000000/image--v1.png\" alt=\"icon\" width={64}/>\n  ),\n  store: ImageStore,\n  component: Button,\n  initProps: {\n    src: \"https://img.88icon.com/download/jpg/20200819/2210309e15cb8b01fe45b3739e015cf7_512_398.jpg!88con\",\n  },\n  settingComponent: ButtonSetting,\n};\n\nexport default componentConfig;\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { componentLibs, getComponent } from \"./common/componentLib\";\nimport { IComponentProps } from \"./interface/IComponentProps\";\nimport { ComponentStore } from \"./store/Component\";\n\nexport interface IRenderProps {\n  component: ComponentStore;\n}\n\nlet Render: React.FC<IRenderProps> = ({ component }) => {\n  const Component = getComponent(component.name)?.component;\n  if (!Component) {\n    console.debug(\"component not found\");\n    return null;\n  }\n  return (\n    <Component props={component.props} store={component}>\n      {component.children?.map((child) => {\n        return <Render key={child.id} component={child}></Render>;\n      })}\n    </Component>\n  );\n};\n\nRender = observer(Render);\n\nexport interface ICreateRenderParams {\n  beforeHoc?: () => void;\n  hoc?: ((Component: React.FC<IComponentProps>) => React.FC<IComponentProps>)[];\n  afterHoc?: () => void;\n  componentJson?: string | ComponentStore;\n}\nconst createRender = (options?: ICreateRenderParams) => {\n\n  if (options?.beforeHoc) {\n    options.beforeHoc();\n  }\n  console.log(componentLibs)\n  if (options?.hoc) {\n    componentLibs.forEach((Com, key) => {\n      const realCom = options.hoc?.reduce((c, hoc) => hoc(c), Com.component);\n      if (realCom) {\n        componentLibs.set(key, {\n          store: Com.store,\n          component:realCom,\n        });\n      } else {\n        throw Error(\"component lose \");\n      }\n    });\n  }\n  if (options?.afterHoc) {\n    options.afterHoc();\n  }\n  return Render;\n};\nexport { createRender };\n","import { throttle } from \"lodash\";\nimport { useEditorContext } from \"../../../../packages/editor/EditorStore\";\n\ninterface IUseDragOpt {\n  onChange: (cur: number, tar: number) => void;\n}\nlet moveEle: HTMLDivElement;\n\nexport function useDrag(props: IUseDragOpt) {\n  const editorContext = useEditorContext();\n\n  const onDragStart = (e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    const currNode = e.currentTarget;\n    const id = currNode.dataset[\"id\"];\n    if (id) {\n      editorContext.setActiveComponentById(id);\n    }\n    moveEle = currNode;\n  };\n\n  const onDrag = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n  };\n\n  const onDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n\n  const onDragOver = throttle(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      e.dataTransfer.dropEffect = \"move\";\n      const currNode = e.currentTarget;\n      const { top, height } = currNode.getBoundingClientRect();\n\n      if (moveEle !== currNode && moveEle.parentNode === currNode.parentNode) {\n        //   下向上移动\n        if (e.pageY - top <= height / 2) {\n          currNode.parentNode?.insertBefore(moveEle, currNode);\n        } else {\n          if (currNode.nextElementSibling) {\n            currNode.parentElement?.insertBefore(\n              moveEle!,\n              currNode.nextElementSibling\n            );\n          } else {\n            currNode.parentElement!.appendChild(moveEle!);\n          }\n        }\n      }\n    },\n    200,\n    {\n      trailing: false,\n    }\n  );\n\n  const onDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const moveNode = moveEle;\n    const currNode = e.currentTarget;\n\n    if (moveEle !== currNode && moveEle.parentNode === currNode.parentNode) {\n      const to = Array.from(currNode!.parentElement!.children).indexOf(\n        currNode\n      );\n      const from = Array.from(moveNode!.parentElement!.children).indexOf(\n        moveNode\n      );\n      const id = moveEle.dataset[\"id\"];\n      if (id) {\n        editorContext.moveComponent(id, from, to);\n      }\n    }\n  };\n\n  return {\n    onDrag,\n    onDragEnd,\n    onDragEnter,\n    onDragOver,\n    onDragStart,\n  };\n}\n","import Add from \"../../../components/Button\";\nimport Page from \"../../../components/Page\";\nimport Image from \"../../../components/Image\";\nimport {\n  addEditorComponent,\n  cleanAllEditorComponent,\n} from \"../../../packages/editor/componentList\";\nimport {\n  editorStore,\n} from \"../../../packages/editor/EditorStore\";\nimport { createRender } from \"../../../packages/render\";\nimport { ActiveHoc } from \"./hocs/ActiveHoc\";\nimport { DraggableHoc } from \"./hocs/DraggableHoc\";\n\nexport const Render = createRender({\n  beforeHoc() {\n    cleanAllEditorComponent();\n    addEditorComponent(Page);\n    addEditorComponent(Add);\n    addEditorComponent(Image);\n  },\n  afterHoc() {\n    // fix hot update bug\n    editorStore.restInitState();\n    const rootNode = editorStore.addComponentToRoot(Page);\n    console.log(rootNode)\n    editorStore.activeComponent = rootNode;\n  },\n  hoc: [\n    ActiveHoc,\n    DraggableHoc\n  ],\n});\n","import { observer } from \"mobx-react-lite\";\nimport { useEditorContext } from \"../../../../packages/editor/EditorStore\";\nimport { IComponentProps } from \"../../../../packages/render/interface/IComponentProps\";\n\nexport function ActiveHoc(Com: React.FC<IComponentProps>) {\n  const ActiveWrapper: React.FC<IComponentProps> = (props) => {\n    const editorStore = useEditorContext();\n    const isActive = editorStore?.activeComponent?.id === props.store.id;\n    return (\n      <div\n        data-name=\"active wrapper\"\n        style={\n          isActive\n            ? { border: \"1px solid red\", position: \"relative\" }\n            : { position: \"relative\" }\n        }\n        onClick={(e) => {\n          e.stopPropagation();\n          if (editorStore) {\n            editorStore.activeComponent = props.store;\n          }\n        }}\n      >\n        {isActive && (\n          <span style={{ position: \"absolute\", right: 0, fontSize: 12 }}>\n            active component {editorStore.activeComponent?.name}\n          </span>\n        )}\n        <Com\n          props={props.props}\n          store={props.store}\n          children={props.children}\n        />\n      </div>\n    );\n  };\n  return observer(ActiveWrapper);\n}\n","import { observer } from \"mobx-react-lite\";\nimport { IComponentProps } from \"../../../../packages/render/interface/IComponentProps\";\nimport { useDrag } from \"./useDragHook\";\n\nexport function DraggableHoc(Com: React.FC<IComponentProps>) {\n  const DraggableWrapper: React.FC<IComponentProps> = (props) => {\n    const draggableHandle = useDrag({\n      onChange: () => {},\n    });\n    return (\n      <div data-id={props.store.id} data-type={props.store.type} draggable {...draggableHandle}>\n        <Com\n          props={props.props}\n          store={props.store}\n          children={props.children}\n        />\n      </div>\n    );\n  };\n  return observer(DraggableWrapper);\n}\n","import { observer } from \"mobx-react-lite\";\nimport { useEditorContext } from \"../../../packages/editor/EditorStore\";\nimport { EditorHistory } from \"../../../packages/editor/history\";\nimport { Button } from \"../../../packages/nes/Button\";\nimport { Col } from \"../../../packages/nes/layout/Col\";\nimport { Row } from \"../../../packages/nes/layout/Row\";\nimport {  Render } from \"../EditorRender\";\n\nlet Editor: React.FC = () => {\n  const editorStore = useEditorContext();\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div\n        className=\"nes-container with-title\"\n        style={{ maxWidth: 375, margin: \"0 auto\" }}\n      >\n        {editorStore.component && <Render component={editorStore.component} />}\n      </div>\n      <div style={{ position: \"absolute\", right: 0, top: 0 }}>\n        <Row gutter={[0, 12]} wrapper>\n          <Col span={12}>\n            <Button\n              onClick={() => {\n                editorStore.deleteComponent();\n              }}\n            >\n              delete\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Button\n              onClick={() => {\n                EditorHistory.undo();\n              }}\n            >\n              undo\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Button\n              onClick={() => {\n                EditorHistory.redo();\n              }}\n            >\n              redo\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\nEditor = observer(Editor);\nexport { Editor };\n\n","import React from \"react\";\nimport {\n  getAllComponent, getEditorComponent,\n} from \"../../../packages/editor/componentList\";\nimport { useEditorContext } from \"../../../packages/editor/EditorStore\";\nimport { Col } from \"../../../packages/nes/layout/Col\";\nimport { Row } from \"../../../packages/nes/layout/Row\";\n\ninterface IComponentListProps {}\nconsole.log('update')\n\nexport const ComponentList: React.FC<IComponentListProps> = (props) => {\n  const editorStore = useEditorContext();\n\n  return (\n    <div className=\"nes-container with-title is-centered\">\n      Components\n      {getAllComponent().map((component) => {\n        return (\n          <Row\n            wrapper\n            justify=\"center\"\n            onClick={() => {\n              editorStore.addComponentToNearParentComponent(getEditorComponent(component.name));\n            }}\n          >\n            <Col span={12}>{component.icon}</Col>\n            <Col span={12} style={{ textAlign: \"center\" }} flex={1}>\n              {component.name}\n            </Col>\n          </Row>\n        );\n      })}\n    </div>\n  );\n};\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useEditorContext } from \"../../../packages/editor/EditorStore\";\n\ninterface ISettingProps {}\n\nlet Setting: React.FC<ISettingProps> = (props) => {\n  const editorStore = useEditorContext();\n  const ComponentSetting = editorStore.getActiveSetting();\n  console.log(ComponentSetting)\n  return (\n    <div className=\"nes-container with-title\">\n      setting \n      {editorStore.activeComponent && ComponentSetting && (\n        <ComponentSetting\n          props={editorStore.activeComponent?.props}\n          store={editorStore.activeComponent}\n        />\n      )}\n    </div>\n  );\n};\nSetting = observer(Setting);\n\nexport { Setting };\n","import React from \"react\";\nimport { Editor } from \"./components/Editor\";\nimport {\n  EditorContextProvider,\n  editorStore,\n} from \"../packages/editor/EditorStore\";\nimport { Col } from \"../packages/nes/layout/Col\";\nimport { Row } from \"../packages/nes/layout/Row\";\nimport { ComponentList } from \"./components/ComponentList\";\nimport { Setting } from \"./components/Setting\";\ninterface ISiteProps {}\n\nexport const Site: React.FC<ISiteProps> = (props) => {\n  return (\n    <EditorContextProvider value={editorStore}>\n      <Row gutter={24} style={{ marginTop: 64,padding:'24px' }}>\n        <Col span={1}>\n          <ComponentList />\n        </Col>\n        <Col flex={1}>\n          <Editor />\n        </Col>\n        <Col span={3}>\n          <Setting />\n        </Col>\n      </Row>\n    </EditorContextProvider>\n  );\n};\n","import \"./App.css\";\nimport { Site } from \"./Site\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Site />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}